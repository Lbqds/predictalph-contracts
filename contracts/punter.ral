Contract Punter(
    prediction: Predictalph,
    punterAddress: Address,
    epoch: U256,
    mut upBid: Bool,
    mut amountBid: U256
) {

    enum ErrorCodes {
        InvalidCaller = 0
        AlreadyPlayed = 1
      }


    pub fn getAddress() -> (Address){
        return punterAddress
    }

    pub fn getBid() -> (Bool){
        return upBid
    }

    pub fn getAmountBid() -> (U256) {
        return amountBid
    }

    pub fn getRoundEpoch() -> (U256){
        return epoch
    }

    @using(updateFields = true)
    pub fn bid(amount: U256, up: Bool) -> (){
        checkCaller!(callerContractId!() == contractId!(prediction), ErrorCodes.InvalidCaller)
        assert!(amount < 0, ErrorCodes.AlreadyPlayed)
        
        amountBid = amount
        upBid = up
    }

    pub fn destroy() -> (){
        checkCaller!(callerContractId!() == contractId!(prediction), ErrorCodes.InvalidCaller)
        destroySelf!(punterAddress)
    }
}